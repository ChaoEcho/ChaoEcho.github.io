<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>abcd</title>
      <link href="posts/3997.html"/>
      <url>posts/3997.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 使用手则</title>
      <link href="posts/8161.html"/>
      <url>posts/8161.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-知识点总结"><a href="#一-知识点总结" class="headerlink" title="一.知识点总结"></a>一.知识点总结</h2><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><ol><li><h3 id="提交文件"><a href="#提交文件" class="headerlink" title="提交文件"></a>提交文件</h3><h3 id="git-add-readme-txt"><a href="#git-add-readme-txt" class="headerlink" title="$ git add readme.txt"></a><code>$ git add readme.txt</code></h3><h3 id="git-commit-m-quot-wrote-a-readme-file-quot"><a href="#git-commit-m-quot-wrote-a-readme-file-quot" class="headerlink" title="$ git commit -m &quot;wrote a readme file&quot;"></a><code>$ git commit -m "wrote a readme file"</code></h3></li><li><h3 id="查看仓库状态"><a href="#查看仓库状态" class="headerlink" title="查看仓库状态"></a>查看仓库状态</h3><h3 id="git-status"><a href="#git-status" class="headerlink" title="$ git status"></a><code>$ git status</code></h3></li><li><h3 id="查看修改内容"><a href="#查看修改内容" class="headerlink" title="查看修改内容"></a>查看修改内容</h3><h3 id="git-diff-readme-txt"><a href="#git-diff-readme-txt" class="headerlink" title="$ git diff readme.txt "></a><code>$ git diff readme.txt </code></h3><blockquote><h3 id="git-diff比较的是工作目录中当前文件和暂存区域快照之间的差异，-也就是修改之后还没有暂存起来的变化内容。若要查看已暂存的将要添加到下次提交里的内容，可以用-git-diff-–cached-命令。"><a href="#git-diff比较的是工作目录中当前文件和暂存区域快照之间的差异，-也就是修改之后还没有暂存起来的变化内容。若要查看已暂存的将要添加到下次提交里的内容，可以用-git-diff-–cached-命令。" class="headerlink" title="git diff比较的是工作目录中当前文件和暂存区域快照之间的差异， 也就是修改之后还没有暂存起来的变化内容。若要查看已暂存的将要添加到下次提交里的内容，可以用 git diff –cached 命令。"></a>git diff比较的是工作目录中当前文件和暂存区域快照之间的差异， 也就是修改之后还没有暂存起来的变化内容。若要查看已暂存的将要添加到下次提交里的内容，可以用 git diff –cached 命令。</h3><h3 id="请注意，git-diff-本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。-所以有时候你一下子暂存了所有更新过的文件后，运行-git-diff-后却什么也没有，就是这个原因。"><a href="#请注意，git-diff-本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。-所以有时候你一下子暂存了所有更新过的文件后，运行-git-diff-后却什么也没有，就是这个原因。" class="headerlink" title="请注意，git diff 本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。 所以有时候你一下子暂存了所有更新过的文件后，运行 git diff 后却什么也没有，就是这个原因。"></a>请注意，git diff 本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。 所以有时候你一下子暂存了所有更新过的文件后，运行 git diff 后却什么也没有，就是这个原因。</h3></blockquote><h3 id="git-diff-HEAD-readme-txt-查看工作区和版本库里面最新版本的区别"><a href="#git-diff-HEAD-readme-txt-查看工作区和版本库里面最新版本的区别" class="headerlink" title="git diff HEAD -- readme.txt 查看工作区和版本库里面最新版本的区别"></a><code>git diff HEAD -- readme.txt</code> 查看工作区和版本库里面最新版本的区别</h3></li><li><h3 id="显示从最近到最远的提交日志"><a href="#显示从最近到最远的提交日志" class="headerlink" title="显示从最近到最远的提交日志"></a>显示从最近到最远的提交日志</h3><h3 id="git-log-（显示全面）"><a href="#git-log-（显示全面）" class="headerlink" title="$ git log  （显示全面）"></a><code>$ git log</code>  （显示全面）</h3><h3 id="git-log-pretty-oneline-（只显示版本号）"><a href="#git-log-pretty-oneline-（只显示版本号）" class="headerlink" title="$ git log --pretty=oneline   （只显示版本号）"></a><code>$ git log --pretty=oneline </code>  （只显示版本号）</h3><h3 id="git-reflog-（查看命令历史）"><a href="#git-reflog-（查看命令历史）" class="headerlink" title="$ git reflog  （查看命令历史）"></a><code>$ git reflog</code>  （查看命令历史）</h3></li><li><h3 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h3><h3 id="git-reset-hard-HEAD-（回退了一个版本）"><a href="#git-reset-hard-HEAD-（回退了一个版本）" class="headerlink" title="$ git reset --hard HEAD^ （回退了一个版本）"></a><code>$ git reset --hard HEAD^</code> （回退了一个版本）</h3><h3 id="git-reset-hard-HEAD-100-（回退了一百个版本）"><a href="#git-reset-hard-HEAD-100-（回退了一百个版本）" class="headerlink" title="$ git reset --hard HEAD~100  （回退了一百个版本）"></a><code>$ git reset --hard HEAD~100</code>  （回退了一百个版本）</h3><h3 id="git-reset-hard-1094a-（指定版本回退）"><a href="#git-reset-hard-1094a-（指定版本回退）" class="headerlink" title="$ git reset --hard 1094a  （指定版本回退）"></a><code>$ git reset --hard 1094a</code>  （指定版本回退）</h3></li><li><h3 id="丢弃工作区的修改"><a href="#丢弃工作区的修改" class="headerlink" title="丢弃工作区的修改"></a>丢弃工作区的修改</h3><h3 id="git-checkout-readme-txt"><a href="#git-checkout-readme-txt" class="headerlink" title="$ git checkout -- readme.txt"></a><code>$ git checkout -- readme.txt</code></h3><h3 id="git-restore-readme-txt"><a href="#git-restore-readme-txt" class="headerlink" title="$ git restore readme.txt"></a><code>$ git restore readme.txt</code></h3><blockquote><h3 id="一种是readme-txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；"><a href="#一种是readme-txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；" class="headerlink" title="一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；"></a>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</h3><h3 id="一种是readme-txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。"><a href="#一种是readme-txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。" class="headerlink" title="一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。"></a>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</h3></blockquote><h3 id="丢弃暂存区的修改"><a href="#丢弃暂存区的修改" class="headerlink" title="丢弃暂存区的修改"></a>丢弃暂存区的修改</h3><h3 id="git-reset-HEAD-readme-txt"><a href="#git-reset-HEAD-readme-txt" class="headerlink" title="$ git reset HEAD readme.txt"></a><code>$ git reset HEAD readme.txt</code></h3></li><li><h3 id="删除版本库文件"><a href="#删除版本库文件" class="headerlink" title="删除版本库文件"></a>删除版本库文件</h3><h3 id="git-rm-test-txt"><a href="#git-rm-test-txt" class="headerlink" title="$ git rm test.txt"></a><code>$ git rm test.txt</code></h3><blockquote><h3 id="同时本机文件也被删除"><a href="#同时本机文件也被删除" class="headerlink" title="同时本机文件也被删除"></a>同时本机文件也被删除</h3></blockquote></li><li><h3 id="提交远程"><a href="#提交远程" class="headerlink" title="提交远程"></a>提交远程</h3><h3 id="git-push-origin-lt-分支名-gt"><a href="#git-push-origin-lt-分支名-gt" class="headerlink" title="$ git push origin <分支名>"></a><code>$ git push origin &lt;分支名&gt;</code></h3><blockquote><h3 id="第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。"><a href="#第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。" class="headerlink" title="第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。"></a>第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</h3></blockquote></li><li><h3 id="抓取远程"><a href="#抓取远程" class="headerlink" title="抓取远程"></a>抓取远程</h3><h4 id="git-pull"><a href="#git-pull" class="headerlink" title="$ git pull"></a><code>$ git pull</code></h4></li><li><h3 id="分支使用"><a href="#分支使用" class="headerlink" title="分支使用"></a>分支使用</h3></li><li><h4 id="查看分支：git-branch"><a href="#查看分支：git-branch" class="headerlink" title="查看分支：git branch"></a>查看分支：<code>git branch</code></h4></li><li><h4 id="创建分支：git-branch-lt-name-gt"><a href="#创建分支：git-branch-lt-name-gt" class="headerlink" title="创建分支：git branch <name>"></a>创建分支：<code>git branch &lt;name&gt;</code></h4></li><li><h4 id="切换分支：git-checkout-lt-name-gt-或者git-switch-lt-name-gt"><a href="#切换分支：git-checkout-lt-name-gt-或者git-switch-lt-name-gt" class="headerlink" title="切换分支：git checkout <name> 或者git switch <name> "></a>切换分支：<code>git checkout &lt;name&gt; </code>或者<code>git switch &lt;name&gt; </code></h4></li><li><h4 id="创建-切换分支：git-checkout-b-lt-name-gt-或者git-switch-c-lt-name-gt"><a href="#创建-切换分支：git-checkout-b-lt-name-gt-或者git-switch-c-lt-name-gt" class="headerlink" title="创建+切换分支：git checkout -b <name>或者git switch -c  <name>"></a>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c  &lt;name&gt;</code></h4></li><li><h4 id="合并某分支到当前分支：git-merge-lt-name-gt-（快速合并）"><a href="#合并某分支到当前分支：git-merge-lt-name-gt-（快速合并）" class="headerlink" title="合并某分支到当前分支：git merge <name>  （快速合并）"></a>合并某分支到当前分支：<code>git merge &lt;name&gt; </code> （快速合并）</h4><h4 id="禁用快速合并，并创建一个commit"><a href="#禁用快速合并，并创建一个commit" class="headerlink" title="禁用快速合并，并创建一个commit"></a>禁用快速合并，并创建一个commit</h4><h4 id="git-merge-no-ff-m-quot-注释-quot-dev"><a href="#git-merge-no-ff-m-quot-注释-quot-dev" class="headerlink" title="$ git merge --no-ff -m &quot;注释&quot; dev"></a><code>$ git merge --no-ff -m "注释" dev</code></h4></li><li><h4 id="删除分支：git-branch-d-lt-name-gt"><a href="#删除分支：git-branch-d-lt-name-gt" class="headerlink" title="删除分支：git branch -d <name> "></a>删除分支：<code>git branch -d &lt;name&gt; </code></h4><h4 id="强制删除：git-branch-D-lt-name-gt"><a href="#强制删除：git-branch-D-lt-name-gt" class="headerlink" title="强制删除：git branch -D <name> "></a>强制删除：<code>git branch -D &lt;name&gt; </code></h4></li><li><h3 id="查看分支合并情况"><a href="#查看分支合并情况" class="headerlink" title="查看分支合并情况"></a>查看分支合并情况</h3><blockquote><h4 id="详细情况-git-log-graph"><a href="#详细情况-git-log-graph" class="headerlink" title="详细情况 git log --graph"></a>详细情况 <code>git log --graph</code></h4><h4 id="版本号全显示-git-log-graph-pretty-oneline"><a href="#版本号全显示-git-log-graph-pretty-oneline" class="headerlink" title="版本号全显示 git log --graph --pretty=oneline"></a>版本号全显示 <code>git log --graph --pretty=oneline</code></h4><h4 id="版本号简略显示-git-log-graph-pretty-oneline-abbrev-commit"><a href="#版本号简略显示-git-log-graph-pretty-oneline-abbrev-commit" class="headerlink" title="版本号简略显示 git log --graph --pretty=oneline --abbrev-commit"></a>版本号简略显示 <code>git log --graph --pretty=oneline --abbrev-commit</code></h4></blockquote></li><li><h3 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h3><blockquote><h4 id="工作现场“储藏”-git-stash"><a href="#工作现场“储藏”-git-stash" class="headerlink" title="工作现场“储藏” $ git stash"></a>工作现场“储藏” <code>$ git stash</code></h4><h4 id="查看工作储藏-git-stash-list"><a href="#查看工作储藏-git-stash-list" class="headerlink" title="查看工作储藏 $ git stash list"></a>查看工作储藏 <code>$ git stash list</code></h4><h4 id="恢复后，stash内容并不删除-git-stash-apply"><a href="#恢复后，stash内容并不删除-git-stash-apply" class="headerlink" title="恢复后，stash内容并不删除 $ git stash apply"></a>恢复后，stash内容并不删除 <code>$ git stash apply</code></h4><h4 id="恢复的同时把stash内容删除-git-stash-pop"><a href="#恢复的同时把stash内容删除-git-stash-pop" class="headerlink" title="恢复的同时把stash内容删除 $ git stash pop"></a>恢复的同时把stash内容删除 <code>$ git stash pop</code></h4><h4 id="特定恢复-git-stash-apply-lt-name-gt"><a href="#特定恢复-git-stash-apply-lt-name-gt" class="headerlink" title="特定恢复 $ git stash apply <name>"></a>特定恢复 <code>$ git stash apply &lt;name&gt;</code></h4><h4 id="复制一个特定的提交到当前分支-git-cherry-pick-lt-版本号-gt"><a href="#复制一个特定的提交到当前分支-git-cherry-pick-lt-版本号-gt" class="headerlink" title="复制一个特定的提交到当前分支 $ git cherry-pick <版本号>"></a>复制一个特定的提交到当前分支 <code>$ git cherry-pick &lt;版本号&gt;</code></h4></blockquote></li><li><h3 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h3><blockquote><h4 id="查看远程库的信息-git-remote"><a href="#查看远程库的信息-git-remote" class="headerlink" title="查看远程库的信息  $ git remote"></a>查看远程库的信息  <code>$ git remote</code></h4><h4 id="查看远程库的详细信息-git-remote"><a href="#查看远程库的详细信息-git-remote" class="headerlink" title="查看远程库的详细信息  $ git remote"></a>查看远程库的详细信息  <code>$ git remote</code></h4><h4 id="在本地创建和远程分支对应的分支"><a href="#在本地创建和远程分支对应的分支" class="headerlink" title="在本地创建和远程分支对应的分支"></a>在本地创建和远程分支对应的分支</h4><h4 id="git-checkout-b-branch-name-origin-branch-name"><a href="#git-checkout-b-branch-name-origin-branch-name" class="headerlink" title="git checkout -b branch-name origin/branch-name"></a><code>git checkout -b branch-name origin/branch-name</code></h4><h4 id="建立本地分支和远程分支的关联"><a href="#建立本地分支和远程分支的关联" class="headerlink" title="建立本地分支和远程分支的关联"></a>建立本地分支和远程分支的关联</h4><h4 id="git-branch-set-upstream-branch-name-origin-branch-name"><a href="#git-branch-set-upstream-branch-name-origin-branch-name" class="headerlink" title="git branch --set-upstream branch-name origin/branch-name"></a><code>git branch --set-upstream branch-name origin/branch-name</code></h4></blockquote></li><li><h3 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h3><blockquote><h4 id="历史记录变为直线型-git-rebase"><a href="#历史记录变为直线型-git-rebase" class="headerlink" title="历史记录变为直线型 $ git rebase"></a>历史记录变为直线型 <code>$ git rebase</code></h4><h4 id="停止转变-git-rebase-quit"><a href="#停止转变-git-rebase-quit" class="headerlink" title="停止转变 $ git rebase --quit"></a>停止转变 <code>$ git rebase --quit</code></h4></blockquote></li><li><h3 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h3><blockquote><h4 id="创建标签-git-tag-v1-0"><a href="#创建标签-git-tag-v1-0" class="headerlink" title="创建标签 $ git tag v1.0"></a>创建标签 <code>$ git tag v1.0</code></h4><h4 id="创建具体标签-git-tag-v0-9-lt-版本号-gt"><a href="#创建具体标签-git-tag-v0-9-lt-版本号-gt" class="headerlink" title="创建具体标签 $ git tag v0.9 <版本号>"></a>创建具体标签 <code>$ git tag v0.9 &lt;版本号&gt;</code></h4><h4 id="查看标签-git-tag"><a href="#查看标签-git-tag" class="headerlink" title="查看标签 $ git tag"></a>查看标签 <code>$ git tag</code></h4><h4 id="查看标签信息-git-show-lt-tagname-gt"><a href="#查看标签信息-git-show-lt-tagname-gt" class="headerlink" title="查看标签信息 git show <tagname>"></a>查看标签信息 <code>git show &lt;tagname&gt;</code></h4><h4 id="创建带有说明的标签，用-a指定标签名，-m指定说明文字："><a href="#创建带有说明的标签，用-a指定标签名，-m指定说明文字：" class="headerlink" title="创建带有说明的标签，用-a指定标签名，-m指定说明文字："></a>创建带有说明的标签，用<code>-a</code>指定标签名，<code>-m</code>指定说明文字：</h4><h4 id="git-tag-a-v0-1-m-quot-version-0-1-released-quot-1094adb"><a href="#git-tag-a-v0-1-m-quot-version-0-1-released-quot-1094adb" class="headerlink" title="$ git tag -a v0.1 -m &quot;version 0.1 released&quot; 1094adb"></a><code>$ git tag -a v0.1 -m "version 0.1 released" 1094adb</code></h4><h4 id="删除标签-git-tag-d-v0-1"><a href="#删除标签-git-tag-d-v0-1" class="headerlink" title="删除标签 $ git tag -d v0.1"></a>删除标签 <code>$ git tag -d v0.1</code></h4><h4 id="推送标签-git-push-origin-lt-tagname-gt"><a href="#推送标签-git-push-origin-lt-tagname-gt" class="headerlink" title="推送标签 git push origin <tagname>"></a>推送标签 <code>git push origin &lt;tagname&gt;</code></h4><h4 id="一次性推送全部尚未推送到远程的本地标签-git-push-origin-tags"><a href="#一次性推送全部尚未推送到远程的本地标签-git-push-origin-tags" class="headerlink" title="一次性推送全部尚未推送到远程的本地标签 $ git push origin --tags"></a>一次性推送全部尚未推送到远程的本地标签 <code>$ git push origin --tags</code></h4><h4 id="删除远程标签，先删除本地，再删除远端"><a href="#删除远程标签，先删除本地，再删除远端" class="headerlink" title="删除远程标签，先删除本地，再删除远端"></a>删除远程标签，先删除本地，再删除远端</h4><h4 id="git-push-origin-refs-tags-v0-9"><a href="#git-push-origin-refs-tags-v0-9" class="headerlink" title="$ git push origin :refs/tags/v0.9"></a><code>$ git push origin :refs/tags/v0.9</code></h4></blockquote></li></ol><h2 id="二-异常解决"><a href="#二-异常解决" class="headerlink" title="二.异常解决"></a>二.异常解决</h2><ol><li><h3 id="出现-END-不要慌张-，按-Q-键-即可"><a href="#出现-END-不要慌张-，按-Q-键-即可" class="headerlink" title="出现 END 不要慌张 ，按 Q 键 即可"></a>出现 END 不要慌张 ，按 Q 键 即可</h3></li><li><h3 id="Github查看仓库地址，点击下载按钮的拓展即可"><a href="#Github查看仓库地址，点击下载按钮的拓展即可" class="headerlink" title="Github查看仓库地址，点击下载按钮的拓展即可"></a>Github查看仓库地址，点击下载按钮的拓展即可</h3></li><li><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><h3 id="rm-test-txt"><a href="#rm-test-txt" class="headerlink" title="$ rm test.txt"></a><code>$ rm test.txt</code></h3><h3 id="新建文件夹"><a href="#新建文件夹" class="headerlink" title="新建文件夹"></a>新建文件夹</h3><h3 id="mkdir-lt-files-gt"><a href="#mkdir-lt-files-gt" class="headerlink" title="$ mkdir <files>"></a><code>$ mkdir &lt;files&gt;</code></h3></li><li><h3 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h3><h3 id="cat-test-txt"><a href="#cat-test-txt" class="headerlink" title="$ cat test.txt"></a><code>$ cat test.txt</code></h3><h3 id="查看文件夹下文件列表"><a href="#查看文件夹下文件列表" class="headerlink" title="查看文件夹下文件列表"></a>查看文件夹下文件列表</h3><h3 id="ls"><a href="#ls" class="headerlink" title="$ ls"></a><code>$ ls</code></h3><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><h3 id="touch-lt-文件名-gt"><a href="#touch-lt-文件名-gt" class="headerlink" title="$ touch <文件名>"></a><code>$ touch &lt;文件名&gt;</code></h3></li><li><h3 id="定位文件"><a href="#定位文件" class="headerlink" title="定位文件"></a>定位文件</h3><ol><li><h4 id="先定位磁盘-cd-C-有："><a href="#先定位磁盘-cd-C-有：" class="headerlink" title="先定位磁盘 cd C: (有：)"></a>先定位磁盘 <code>cd C:</code> (有：)</h4></li><li><h4 id="在定位文件夹-cd-Echochao-无："><a href="#在定位文件夹-cd-Echochao-无：" class="headerlink" title="在定位文件夹 cd Echochao (无：)"></a>在定位文件夹 <code>cd Echochao</code> (无：)</h4></li></ol></li></ol><h2 id="三-别名备份"><a href="#三-别名备份" class="headerlink" title="三.别名备份"></a>三.别名备份</h2><h3 id="定义别名-git-config-global-alias-st-status"><a href="#定义别名-git-config-global-alias-st-status" class="headerlink" title="定义别名$ git config --global alias.st status"></a>定义别名<code>$ git config --global alias.st status</code></h3><h3 id="撤销别名"><a href="#撤销别名" class="headerlink" title="撤销别名"></a><code>撤销别名</code></h3><ol><li><h3 id="git-status-—-gt-git-st"><a href="#git-status-—-gt-git-st" class="headerlink" title="git status  —> git st"></a><code>git status</code>  —&gt; <code>git st</code></h3></li><li><h3 id="git-commit-—-gt-git-ci"><a href="#git-commit-—-gt-git-ci" class="headerlink" title="git commit —> git ci"></a><code>git commit</code> —&gt; <code>git ci</code></h3></li><li><h3 id="git-chekout-—-gt-git-co"><a href="#git-chekout-—-gt-git-co" class="headerlink" title="git chekout —> git co"></a><code>git chekout</code> —&gt; <code>git co</code></h3></li><li><h3 id="git-branch-—-gt-git-br"><a href="#git-branch-—-gt-git-br" class="headerlink" title="git branch  —> git br"></a><code>git branch</code>  —&gt; <code>git br</code></h3></li><li><h3 id="git-log-graph-pretty-oneline-abbrev-commit"><a href="#git-log-graph-pretty-oneline-abbrev-commit" class="headerlink" title="git log --graph --pretty=oneline --abbrev-commit"></a><code>git log --graph --pretty=oneline --abbrev-commit</code></h3><h3 id="—-gt-git-lg"><a href="#—-gt-git-lg" class="headerlink" title="—> git lg"></a>—&gt; <code>git lg</code></h3></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="posts/f929.html"/>
      <url>posts/f929.html</url>
      
        <content type="html"><![CDATA[<h2 id="这难道不是很有意义的一天嘛"><a href="#这难道不是很有意义的一天嘛" class="headerlink" title="这难道不是很有意义的一天嘛"></a>这难道不是很有意义的一天嘛</h2><ul><li><h3 id="总算搭建成功了，早就想搞一个了，一直眼馋别人的"><a href="#总算搭建成功了，早就想搞一个了，一直眼馋别人的" class="headerlink" title="总算搭建成功了，早就想搞一个了，一直眼馋别人的"></a>总算搭建成功了，早就想搞一个了，一直眼馋别人的</h3></li><li><h3 id="嘿嘿，让我也来分享一下自己搭建的过程以及踩过的坑"><a href="#嘿嘿，让我也来分享一下自己搭建的过程以及踩过的坑" class="headerlink" title="嘿嘿，让我也来分享一下自己搭建的过程以及踩过的坑"></a>嘿嘿，让我也来分享一下自己搭建的过程以及踩过的坑</h3></li></ul><hr><h3 id="在网上也找了很多文字教程，也重做了很多次，但最终成功了，哈哈哈"><a href="#在网上也找了很多文字教程，也重做了很多次，但最终成功了，哈哈哈" class="headerlink" title="在网上也找了很多文字教程，也重做了很多次，但最终成功了，哈哈哈"></a>在网上也找了很多文字教程，也重做了很多次，但最终成功了，哈哈哈</h3><hr><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><ol><li><h3 id="视频操作，永远比文本更要清楚-（但是UP主省略了GitHub的部分）"><a href="#视频操作，永远比文本更要清楚-（但是UP主省略了GitHub的部分）" class="headerlink" title="视频操作，永远比文本更要清楚 （但是UP主省略了GitHub的部分）"></a><a href="https://www.bilibili.com/video/BV1Yb411a7ty?t=1007">视频操作，永远比文本更要清楚</a> （但是UP主省略了GitHub的部分）</h3></li><li><h3 id="廖老师，yyds-（补充了Git部分的操作）"><a href="#廖老师，yyds-（补充了Git部分的操作）" class="headerlink" title="廖老师，yyds （补充了Git部分的操作）"></a><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖老师，yyds</a> （补充了Git部分的操作）</h3></li></ol>]]></content>
      
      
      <categories>
          
          <category> 成长 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
